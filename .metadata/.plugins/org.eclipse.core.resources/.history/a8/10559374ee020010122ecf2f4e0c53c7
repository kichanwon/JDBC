package edu.kh.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * JDBC - Java DataBase Connectivity
 * 
 * Connecting Java-DB API
 */
public class JDBC_EX1 {
	
	public static void main(String[] args) {
		
//		1. JDBC 객체 참조용 변수 선언
//			java.sql.Connection
//			-> 특정 DBMS와 연결하기 위한 정보를 저장한 객체
//			DB Server Address , PortNumber , DB Name , Account ID/PW
			Connection conn = null;
			
//			java.sql.Statement
//			1) SQL		Java -> DB
//			2) result	DB -> Java
			Statement stmt = null;
//			
//			java.sql.ResultSet
//			saving SELECT result
			ResultSet rs = null;
		
		
//		2. DriverManager 객체를 이용하여 Connection 객체 생성
//			java.sql.DriverManager
//			DB연결 정보와 JDBC Driver를 이용해서
//			Connection 객체 생성
			
			try {
//				2-1) Oracle JDBC Driver 객체를 Memory Load
				Class.forName("oracle.jdbc.driver.OracleDriver");	// need to catch ClassNotFoundException
//				Class.forName("PackageName + ClassName");
//				->해당 클래스를 읽어 메모리에 적재
//				->JVM이 프로그램 동작에 사용할 객체를 생성하는 구문
				
//				oracle.jdbc.driver.OracleDriver
//				Oracle DMS 연결시 필요한 코드가 담
//				ojdbs 라이브러리 파일 내에 존재
//				Oracle에서 만들어서 제공하는 Class
			
				
//				2-2) DB 연결 정보 작성
				String type = "jdbc:oracle:thin:@";	// 드라이버 종류
				String host = "localhost";			// server ip,domain
				String port = ":1521";				// port num
				String dbName = ":XE";				// dbms name (XE == eXpress Edition)

				String userName = "kh";				// user name
				String password = "kh1234";			// pw
				
				
//				2-3) DB연결 정보와 DriverManager 이용하여 Connection 객체 생성
				conn = DriverManager.getConnection(
						type+host+port+dbName,
						userName,
						password);
//				need to catch SQLException > DB 연결과 관련된 모든 예외의 최상위 부모
				
				
				
//				Connection 객체 테스트
				System.out.println(conn);
				
			} catch (ClassNotFoundException e) {
				System.out.println("Can not found Class");
				e.printStackTrace();
			} catch (SQLException e) {
				e.printStackTrace();
			}
			
			
	}
	
}


